#!/bin/sh
# get source for fis-gtm including extra autogenerated files provided separately
# to enable build without existing Mumps compiler

UPSTREAM_EXTRAS_SITE="http://public.kitware.com/pub/itk/OSEHRA"

#set -x
set -e
NAME=`dpkg-parsechangelog | awk '/^Source/ { print $2 }'`
UPSTREAMNAME=`echo $NAME | sed 's/^fis-//'`

if ! echo $@ | grep -q upstream-version ; then
    VERSION=`dpkg-parsechangelog | awk '/^Version:/ { print $2 }' | sed 's/\([0-9\.]\+\)-[0-9]\+$/\1/'`
    # regard dversionmangle
    VERSION=`echo ${VERSION} | sed 's/[.-]//g'`
else
    VERSION=`echo $@ | sed "s?^.*--upstream-version \([0-9A-Z]\+\) .*${NAME}.*?\1?"`
    if echo "$VERSION" | grep -q "upstream-version" ; then
        echo "Unable to parse version number"
        exit
    fi
fi

UPSTREAM_EXTRAS_SRC="gtm_V${VERSION}_linux_i686_src_extras"
UPSTREAM_EXTRAS_SRC_TGZ="${UPSTREAM_EXTRAS_SRC}.tar.gz"
SRC_EXTRAS_DIR="fis-gtm-src-extras"

TARBALLDIR=../tarballs
mkdir -p ${TARBALLDIR}
cd ${TARBALLDIR}
mv ../${UPSTREAMNAME}_V${VERSION}*src.tar.gz .
rm -f ../${NAME}_${VERSION}.orig.tar.gz

# obtain "real" version number from subdirectory name at SF
wget -q -N http://sourceforge.net/projects/fis-gtm/files/GT.M-x86-Linux-src/
PKGVERSION=`grep $VERSION index.html | sed "s?.*x86-Linux/V\([-0-9.A-Z]\+\)/gtm_V${VERSION}_linux_.*?\1?" | head -n 1`

# check whether we found the real version
TMPVERSION=`echo $PKGVERSION | sed 's/[.-]//g'`

if [ "$TMPVERSION" = "$VERSION" ] ; then
    rm -f index.html
    
    # fetch additional files to enable build without working Mumps installation
    wget -N ${UPSTREAM_EXTRAS_SITE}/${UPSTREAM_EXTRAS_SRC_TGZ}
    tar -xzf ${UPSTREAM_EXTRAS_SRC_TGZ}

    OUTPUTDIR=${NAME}-${PKGVERSION}
    mkdir ${OUTPUTDIR}
    cd ${OUTPUTDIR}
    tar -xzf ../${UPSTREAMNAME}_V${VERSION}*src.tar.gz
    # copy files from extra_src into side helper directory
    mkdir ${SRC_EXTRAS_DIR}
    cp -a ../${NAME}/* ${SRC_EXTRAS_DIR}
    cd ..

    GZIP="--best --no-name" tar --owner=root --group=root --mode=a+rX -czf ${NAME}_${PKGVERSION}.orig.tar.gz ${OUTPUTDIR}
    rm -rf ${OUTPUTDIR} ${NAME}
else
    echo "Failed to detect real version from Sourceforge index file.  Please check regular expression"
fi
